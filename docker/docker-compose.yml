version: '2'
services:
  zookeeper:
    labels:
      - "msa-training"
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - 'zookeeper_data:/zookeeper'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    labels:
      - "msa-training"
    image: confluentinc/cp-kafka:5.5.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - 'kafka_data:/kafka'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

#  broker-two:
#    labels:
#      - "msa-training"
#    image: confluentinc/cp-kafka:5.5.0
#    hostname: broker-two
#    container_name: broker-two
#    depends_on:
#      - zookeeper
#    ports:
#      - "29093:29093"
#      - "9093:9093"
#    volumes:
#      - 'kafka_data:/kafka'
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-two:29093,PLAINTEXT_HOST://localhost:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#
#  broker-three:
#    labels:
#      - "msa-training"
#    image: confluentinc/cp-kafka:5.5.0
#    hostname: broker-three
#    container_name: broker-three
#    depends_on:
#      - zookeeper
#    ports:
#      - "29094:29094"
#      - "9094:9094"
#    volumes:
#      - 'kafka_data:/kafka'
#    environment:
#      KAFKA_BROKER_ID: 3
#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-three:29094,PLAINTEXT_HOST://localhost:9094
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  accounts-cassandra:
    labels:
      - "msa-training"
    image: 'cassandra:3.11'
    hostname: accounts-cassandra
    container_name: accounts-cassandra
    ports:
      - '7000:7000'
      - '9042:9042'
    volumes:
      - 'cassandra_data:/var/lib/cassandra'
    environment:
      - CASSANDRA_BROADCAST_ADDRESS=accounts-cassandra
      - CASSANDRA_SEEDS=accounts-cassandra
      - CASSANDRA_PASSWORD_SEEDER=yes
      - CASSANDRA_PASSWORD=cassandra

#  accounts-redis:
#    labels:
#      - "msa-training"
#    image: 'redis:6.0.5'
#    hostname: accounts-redis
#    container_name: accounts-redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - 'redis_data:/redis'
#
#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    image: rediscommander/redis-commander:latest
#    restart: always
#    environment:
#      - REDIS_HOSTS=local:accounts-redis:6379
#    ports:
#      - "8081:8081"
#    volumes:
#      - 'redis_data:/redis'
#  oracle:
#    container_name: bank-oracle
#    hostname: bank-oracle
#    image: wnameless/oracle-xe-11g
#    volumes:
#      - 'oracle_data:/oracle'
#    ports:
#      - "1521:1521"

#  tarantool:
#    container_name: accounts-tarantool
#    hostname: accounts-tarantool
#    image: tarantool/tarantool
#    volumes:
#      - 'tarantool_data:/tarantool'
#    ports:
#      - "3301:3301"
#    environment:
#      TARANTOOL_USER_NAME: iurii
#      TARANTOOL_USER_PASSWORD: Passw0rd
#
#  tarantool1:
#    container_name: tarantool1
#    hostname: tarantool1
##    image: tarantool/tarantool:2.x-centos7
#    image: tarantool/vshard:0.1.14
##    volumes:
##      - './tarantool-vshard:/opt/tarantool'
##    entrypoint: /opt/tarantool/start-tarantool.sh
#    entrypoint: tarantool "/usr/local/bin/tarantool-entrypoint.lua"
#    ports:
#      - "3301:3301"
#    networks:
#      - msanet
#    environment:
#      TARANTOOL_USER_NAME: iurii
#      TARANTOOL_USER_PASSWORD: Passw0rd
#      TARANTOOL_REPLICATION: "tarantool1,tarantool2"
#
#  tarantool2:
#    container_name: tarantool2
#    hostname: tarantool2
##    image: tarantool/tarantool:2.x-centos7
#    image: tarantool/vshard:0.1.14
##    volumes:
##      - './tarantool-vshard:/opt/tarantool'
##    entrypoint: /opt/tarantool/start-tarantool.sh
#    entrypoint: tarantool "/usr/local/bin/tarantool-entrypoint.lua"
#    ports:
#      - "3302:3301"
#    networks:
#      - msanet
#    environment:
#      TARANTOOL_USER_NAME: iurii
#      TARANTOOL_USER_PASSWORD: Passw0rd
#      TARANTOOL_REPLICATION: "tarantool1,tarantool2"

volumes:
  cassandra_data:
    driver: local
  kafka_data:
    driver: local
#  redis_data:
#    driver: local
  zookeeper_data:
    driver: local
#  tarantool_data:
#    driver: local
#  oracle_data:
#    driver: local

networks:
  msanet:
    driver: bridge